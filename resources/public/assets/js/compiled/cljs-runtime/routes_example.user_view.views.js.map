{"version":3,"sources":["routes_example/user_view/views.cljs"],"mappings":";AAMA,2CAAA,3CAAMA,8FAAWC;AAAjB,AACE,WAAA,AAAAC,PAAMC,uBAAM,sDAAA,mFAAA,zIAACC,uPAAgC,AAAA,gFAAKH;AAAlD,AAAA,0FAAA,mDACQ,CAAA,oEAA6B,AAAA,mFAAOE;;AAE9C,AAAAE,yEAAA,2EAAA,WAA2CC,EAAEL;AAA7C,AAAA,0FAA4DD,yCAAUC","names":["routes-example.user-view.views/user-view","route-params","cljs.core/deref","user","re_frame.core.subscribe","routes-example.routes/panels","_"],"sourcesContent":["(ns routes-example.user-view.views\n  (:require [re-frame.core :as re-frame]\n            [routes-example.routes :as routes]\n            [routes-example.user-view.subs :as subs]\n            [routes-example.subs :as route-subs]))\n\n(defn user-view [route-params]\n  (let [user @(re-frame/subscribe [::subs/user (:id route-params)])]\n    [:div (str \"The selected user is \" (:name user))]))\n\n(defmethod routes/panels :user-view-panel [_ route-params] [user-view route-params])"]}