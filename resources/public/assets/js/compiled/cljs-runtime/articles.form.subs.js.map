{"version":3,"sources":["articles/form/subs.cljs"],"mappings":";AAIA,2DAAA,3DAACA,qMAEA,cAAAC,HAAKG;AAAL,AAAA,IAAAF,aAAAD;QAAA,AAAAE,4CAAAD,WAAA,IAAA,/DAASG;SAAT,AAAAF,4CAAAD,WAAA,IAAA,hEAAWI;AAAX,AACE,yDAAA,mFAAA,iEAAA,tMAACC,+CAAOH,4IAAUE;;AAErB,2DAAA,3DAACN,yNAEA,cAAAQ,HAAKJ;AAAL,AAAA,IAAAK,aAAAD;QAAA,AAAAL,4CAAAM,WAAA,IAAA,/DAASJ;eAAT,AAAAF,4CAAAM,WAAA,IAAA,tEAAWC;AAAX,AACE,8BAAA,WAAAC,lCAACC;AAAD,AAAS,yDAAA,mFAAA,sDAAAD,3LAACJ,+CAAOH;GAAcM","names":["re_frame.core.reg_sub","p__30210","vec__30211","cljs.core.nth","db","_","id","cljs.core.get_in","p__30215","vec__30216","form-ids","p1__30214#","cljs.core/every?"],"sourcesContent":["(ns articles.form.subs\n  (:require [re-frame.core :as re-frame]))\n\n\n(re-frame/reg-sub\n ::form\n (fn [db [_ id]]\n   (get-in db [:form id] \"\")))\n\n(re-frame/reg-sub\n ::form-is-valid?\n (fn [db [_ form-ids]]\n   (every? #(get-in db [:form %]) form-ids)))"]}